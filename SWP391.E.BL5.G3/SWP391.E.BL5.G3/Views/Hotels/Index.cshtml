@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model X.PagedList.IPagedList<SWP391.E.BL5.G3.Models.Hotel>
@using X.PagedList.Mvc.Core
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentFilter = ViewData["CurrentFilter"]?.ToString() ?? "None";
}

<h1>List of Hotels</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Add New Hotel</a>
</p>

<!-- Hiển thị thông báo -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<style>
    .filter-select {
        width: 200px; /* Căn chỉnh kích thước cho phù hợp */
    }
</style>

<form asp-controller="Hotels" asp-action="Index" method="get" class="form-inline mb-3">
    <div class="form-group mr-2">
        <label for="filter" class="sr-only">Filter</label>
        @Html.DropDownList("filter", new SelectList(new[]
                 {
        new { Value = "None", Text = "None" },
        new { Value = "HighestPrice", Text = "Highest Price" },
        new { Value = "LowestPrice", Text = "Lowest Price" },
        new { Value = "MostBooked", Text = "Most Booked" }
        }, "Value", "Text", currentFilter), new { @class = "form-control filter-select", onchange = "this.form.submit()" })
    </div>
</form>

<table class="table table-striped table-bordered">
    <thead class="thead-dark">
        <tr>
            <th>Id</th>
            <th>Hotel Name</th>
            <th>Location</th>
            <th>Description</th>
            <th>Image</th>
            <th>Price</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.HotelId)</td>
                <td>@Html.DisplayFor(modelItem => item.HotelName)</td>
                <td>@Html.DisplayFor(modelItem => item.Location)</td>
                <td>
                    @if (!string.IsNullOrEmpty(item.Description))
                    {
                        <span>@TruncateDescription(item.Description, 50)</span> <!-- Hiển thị phần mô tả rút gọn -->
                    }
                </td>
                <td><img src="@item.Image" alt="Image" style="width: 100px; height: auto;" /></td>
                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                <td>@(item.Status ? "Active" : "Inactive")</td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.HotelId" class="btn btn-sm btn-info">Details</a> |
                    <a asp-action="Edit" asp-route-id="@item.HotelId" class="btn btn-sm btn-warning">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.HotelId" class="btn btn-sm btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page, filter = currentFilter }))
</div>

@functions {
    public static string TruncateDescription(string description, int maxLength)
    {
        if (description.Length <= maxLength)
        {
            return description;
        }

        return description.Substring(0, maxLength) + "...";
    }
}
